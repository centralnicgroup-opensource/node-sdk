export var fixedURLEnc = function (str) {
    return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {
        return "%".concat(c.charCodeAt(0).toString(16).toUpperCase());
    });
};
var SocketConfig = (function () {
    function SocketConfig() {
        this.entity = "";
        this.login = "";
        this.otp = "";
        this.pw = "";
        this.remoteaddr = "";
        this.session = "";
        this.user = "";
    }
    SocketConfig.prototype.getPOSTData = function () {
        var data = "";
        if (this.entity !== "") {
            data += "".concat(fixedURLEnc("s_entity"), "=").concat(fixedURLEnc(this.entity), "&");
        }
        if (this.login !== "") {
            data += "".concat(fixedURLEnc("s_login"), "=").concat(fixedURLEnc(this.login), "&");
        }
        if (this.otp !== "") {
            data += "".concat(fixedURLEnc("s_otp"), "=").concat(fixedURLEnc(this.otp), "&");
        }
        if (this.pw !== "") {
            data += "".concat(fixedURLEnc("s_pw"), "=").concat(fixedURLEnc(this.pw), "&");
        }
        if (this.remoteaddr !== "") {
            data += "".concat(fixedURLEnc("s_remoteaddr"), "=").concat(fixedURLEnc(this.remoteaddr), "&");
        }
        if (this.session !== "") {
            data += "".concat(fixedURLEnc("s_session"), "=").concat(fixedURLEnc(this.session), "&");
        }
        if (this.user !== "") {
            data += "".concat(fixedURLEnc("s_user"), "=").concat(fixedURLEnc(this.user), "&");
        }
        return data;
    };
    SocketConfig.prototype.getSession = function () {
        return this.session;
    };
    SocketConfig.prototype.getSystemEntity = function () {
        return this.entity;
    };
    SocketConfig.prototype.setLogin = function (value) {
        this.session = "";
        this.login = value;
        return this;
    };
    SocketConfig.prototype.setOTP = function (value) {
        this.session = "";
        this.otp = value;
        return this;
    };
    SocketConfig.prototype.setPassword = function (value) {
        this.session = "";
        this.pw = value;
        return this;
    };
    SocketConfig.prototype.setRemoteAddress = function (value) {
        this.remoteaddr = value;
        return this;
    };
    SocketConfig.prototype.setSession = function (value) {
        this.session = value;
        this.login = "";
        this.pw = "";
        this.otp = "";
        return this;
    };
    SocketConfig.prototype.setSystemEntity = function (value) {
        this.entity = value;
        return this;
    };
    SocketConfig.prototype.setUser = function (value) {
        this.user = value;
        return this;
    };
    return SocketConfig;
}());
export { SocketConfig };
//# sourceMappingURL=data:application/json;base64,