export var ResponseParser = {
    parse: function (raw) {
        var hash = {};
        var regexp = /^([^=]*[^\t= ])[\t ]*=[\t ]*(.*)$/;
        var r = raw.replace(/\r\n/g, "\n").split("\n");
        while (r.length) {
            var row = r.shift();
            var m = void 0;
            if (row) {
                m = row.match(regexp);
                if (m) {
                    var mm = m[1].match(/^property\[([^\]]*)\]/i);
                    if (mm) {
                        if (!Object.prototype.hasOwnProperty.call(hash, "PROPERTY")) {
                            hash.PROPERTY = {};
                        }
                        mm[1] = mm[1].toUpperCase().replace(/\s/g, "");
                        if (!Object.prototype.hasOwnProperty.call(hash.PROPERTY, mm[1])) {
                            hash.PROPERTY[mm[1]] = [];
                        }
                        hash.PROPERTY[mm[1]].push(m[2].replace(/[\t ]*$/, ""));
                    }
                    else {
                        hash[m[1].toUpperCase()] = m[2].replace(/[\t ]*$/, "");
                    }
                }
            }
        }
        return hash;
    },
    serialize: function (r) {
        var plain = "[RESPONSE]";
        if (Object.prototype.hasOwnProperty.call(r, "PROPERTY")) {
            Object.keys(r.PROPERTY).forEach(function (key) {
                r.PROPERTY[key].forEach(function (val, index) {
                    plain += "\r\nPROPERTY[" + key + "][" + index + "]=" + val;
                });
            });
        }
        if (Object.prototype.hasOwnProperty.call(r, "CODE")) {
            plain += "\r\nCODE=" + r.CODE;
        }
        if (Object.prototype.hasOwnProperty.call(r, "DESCRIPTION")) {
            plain += "\r\nDESCRIPTION=" + r.DESCRIPTION;
        }
        if (Object.prototype.hasOwnProperty.call(r, "QUEUETIME")) {
            plain += "\r\nQUEUETIME=" + r.QUEUETIME;
        }
        if (Object.prototype.hasOwnProperty.call(r, "RUNTIME")) {
            plain += "\r\nRUNTIME=" + r.RUNTIME;
        }
        plain += "\r\nEOF\r\n";
        return plain;
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzcG9uc2VwYXJzZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvcmVzcG9uc2VwYXJzZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxDQUFDLElBQU0sY0FBYyxHQUFRO0lBTWpDLEtBQUssRUFBRSxVQUFDLEdBQVc7UUFDakIsSUFBTSxJQUFJLEdBQVEsRUFBRSxDQUFDO1FBQ3JCLElBQU0sTUFBTSxHQUFHLG1DQUFtQyxDQUFDO1FBQ25ELElBQU0sQ0FBQyxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNqRCxPQUFPLENBQUMsQ0FBQyxNQUFNLEVBQUU7WUFDZixJQUFNLEdBQUcsR0FBRyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7WUFDdEIsSUFBSSxDQUFDLFNBQUEsQ0FBQztZQUNOLElBQUksR0FBRyxFQUFFO2dCQUNQLENBQUMsR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUN0QixJQUFJLENBQUMsRUFBRTtvQkFDTCxJQUFNLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLHdCQUF3QixDQUFDLENBQUM7b0JBQ2hELElBQUksRUFBRSxFQUFFO3dCQUNOLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLFVBQVUsQ0FBQyxFQUFFOzRCQUMzRCxJQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQzt5QkFDcEI7d0JBQ0QsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO3dCQUMvQyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7NEJBQy9ELElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO3lCQUMzQjt3QkFDRCxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO3FCQUN4RDt5QkFBTTt3QkFDTCxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDLENBQUM7cUJBQ3hEO2lCQUNGO2FBQ0Y7U0FDRjtRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQU1ELFNBQVMsRUFBRSxVQUFDLENBQU07UUFDaEIsSUFBSSxLQUFLLEdBQUcsWUFBWSxDQUFDO1FBQ3pCLElBQUksTUFBTSxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxVQUFVLENBQUMsRUFBRTtZQUN2RCxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBQyxHQUFHO2dCQUNsQyxDQUFDLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFDLEdBQVcsRUFBRSxLQUFhO29CQUNqRCxLQUFLLElBQUksa0JBQWdCLEdBQUcsVUFBSyxLQUFLLFVBQUssR0FBSyxDQUFDO2dCQUNuRCxDQUFDLENBQUMsQ0FBQztZQUNMLENBQUMsQ0FBQyxDQUFDO1NBQ0o7UUFDRCxJQUFJLE1BQU0sQ0FBQyxTQUFTLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsTUFBTSxDQUFDLEVBQUU7WUFDbkQsS0FBSyxJQUFJLGNBQVksQ0FBQyxDQUFDLElBQU0sQ0FBQztTQUMvQjtRQUNELElBQUksTUFBTSxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxhQUFhLENBQUMsRUFBRTtZQUMxRCxLQUFLLElBQUkscUJBQW1CLENBQUMsQ0FBQyxXQUFhLENBQUM7U0FDN0M7UUFDRCxJQUFJLE1BQU0sQ0FBQyxTQUFTLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsV0FBVyxDQUFDLEVBQUU7WUFDeEQsS0FBSyxJQUFJLG1CQUFpQixDQUFDLENBQUMsU0FBVyxDQUFDO1NBQ3pDO1FBQ0QsSUFBSSxNQUFNLENBQUMsU0FBUyxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFLFNBQVMsQ0FBQyxFQUFFO1lBQ3RELEtBQUssSUFBSSxpQkFBZSxDQUFDLENBQUMsT0FBUyxDQUFDO1NBQ3JDO1FBQ0QsS0FBSyxJQUFJLGFBQWEsQ0FBQztRQUN2QixPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7Q0FDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IFJlc3BvbnNlUGFyc2VyOiBhbnkgPSB7XG4gIC8qKlxuICAgKiBNZXRob2QgdG8gcGFyc2UgcGxhaW4gQVBJIHJlc3BvbnNlIGludG8ganMgb2JqZWN0XG4gICAqIEBwYXJhbSByYXcgQVBJIHBsYWluIHJlc3BvbnNlXG4gICAqIEByZXR1cm5zIEFQSSByZXNwb25zZSBhcyBKUyBPYmplY3QgKGhhc2gpXG4gICAqL1xuICBwYXJzZTogKHJhdzogc3RyaW5nKTogYW55ID0+IHtcbiAgICBjb25zdCBoYXNoOiBhbnkgPSB7fTtcbiAgICBjb25zdCByZWdleHAgPSAvXihbXj1dKlteXFx0PSBdKVtcXHQgXSo9W1xcdCBdKiguKikkLztcbiAgICBjb25zdCByID0gcmF3LnJlcGxhY2UoL1xcclxcbi9nLCBcIlxcblwiKS5zcGxpdChcIlxcblwiKTtcbiAgICB3aGlsZSAoci5sZW5ndGgpIHtcbiAgICAgIGNvbnN0IHJvdyA9IHIuc2hpZnQoKTtcbiAgICAgIGxldCBtO1xuICAgICAgaWYgKHJvdykge1xuICAgICAgICBtID0gcm93Lm1hdGNoKHJlZ2V4cCk7XG4gICAgICAgIGlmIChtKSB7XG4gICAgICAgICAgY29uc3QgbW0gPSBtWzFdLm1hdGNoKC9ecHJvcGVydHlcXFsoW15cXF1dKilcXF0vaSk7XG4gICAgICAgICAgaWYgKG1tKSB7XG4gICAgICAgICAgICBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChoYXNoLCBcIlBST1BFUlRZXCIpKSB7XG4gICAgICAgICAgICAgIGhhc2guUFJPUEVSVFkgPSB7fTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG1tWzFdID0gbW1bMV0udG9VcHBlckNhc2UoKS5yZXBsYWNlKC9cXHMvZywgXCJcIik7XG4gICAgICAgICAgICBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChoYXNoLlBST1BFUlRZLCBtbVsxXSkpIHtcbiAgICAgICAgICAgICAgaGFzaC5QUk9QRVJUWVttbVsxXV0gPSBbXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGhhc2guUFJPUEVSVFlbbW1bMV1dLnB1c2gobVsyXS5yZXBsYWNlKC9bXFx0IF0qJC8sIFwiXCIpKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaGFzaFttWzFdLnRvVXBwZXJDYXNlKCldID0gbVsyXS5yZXBsYWNlKC9bXFx0IF0qJC8sIFwiXCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gaGFzaDtcbiAgfSxcbiAgLyoqXG4gICAqIFNlcmlhbGl6ZSBnaXZlbiBwYXJzZWQgcmVzcG9uc2UgaGFzaCBiYWNrIHRvIHBsYWluIHRleHRcbiAgICogQHBhcmFtIHIgQVBJIHJlc3BvbnNlIGFzIEpTIE9iamVjdCAoaGFzaClcbiAgICogQHJldHVybnMgcGxhaW4gQVBJIHJlc3BvbnNlXG4gICAqL1xuICBzZXJpYWxpemU6IChyOiBhbnkpOiBzdHJpbmcgPT4ge1xuICAgIGxldCBwbGFpbiA9IFwiW1JFU1BPTlNFXVwiO1xuICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwociwgXCJQUk9QRVJUWVwiKSkge1xuICAgICAgT2JqZWN0LmtleXMoci5QUk9QRVJUWSkuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICAgIHIuUFJPUEVSVFlba2V5XS5mb3JFYWNoKCh2YWw6IHN0cmluZywgaW5kZXg6IG51bWJlcikgPT4ge1xuICAgICAgICAgIHBsYWluICs9IGBcXHJcXG5QUk9QRVJUWVske2tleX1dWyR7aW5kZXh9XT0ke3ZhbH1gO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHIsIFwiQ09ERVwiKSkge1xuICAgICAgcGxhaW4gKz0gYFxcclxcbkNPREU9JHtyLkNPREV9YDtcbiAgICB9XG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChyLCBcIkRFU0NSSVBUSU9OXCIpKSB7XG4gICAgICBwbGFpbiArPSBgXFxyXFxuREVTQ1JJUFRJT049JHtyLkRFU0NSSVBUSU9OfWA7XG4gICAgfVxuICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwociwgXCJRVUVVRVRJTUVcIikpIHtcbiAgICAgIHBsYWluICs9IGBcXHJcXG5RVUVVRVRJTUU9JHtyLlFVRVVFVElNRX1gO1xuICAgIH1cbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHIsIFwiUlVOVElNRVwiKSkge1xuICAgICAgcGxhaW4gKz0gYFxcclxcblJVTlRJTUU9JHtyLlJVTlRJTUV9YDtcbiAgICB9XG4gICAgcGxhaW4gKz0gXCJcXHJcXG5FT0ZcXHJcXG5cIjtcbiAgICByZXR1cm4gcGxhaW47XG4gIH0sXG59O1xuIl19