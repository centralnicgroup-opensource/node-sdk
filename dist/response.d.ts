import * as defresponses from "./defaultresponses";
import * as it from "./iterator";
export declare const responses: defresponses.IResponseTemplates;
export declare const pagerRegexp: RegExp;
export declare class Response {
    usecolregexp: boolean;
    colregexp: RegExp;
    data: any;
    cmd: any;
    it: it.ResponseIterator;
    constructor(pr: any, pcommand: any);
    useColumns(arr?: string | string[]): void;
    rewind(): any;
    hasNext(): boolean;
    next(): any;
    hasPrevious(): boolean;
    previous(): any;
    current(): any;
    get(pprop: string): string | null;
    getColumn(pprop: string): any;
    getColumnIndex(pprop: string, pidx: number, pcastint: boolean): any;
    applyCustomChanges(r: any): any;
    asString(): string;
    asHash(): any;
    asList(): any;
    code(): string | null;
    description(): string | null;
    properties(): any;
    runtime(): number | null;
    queuetime(): number | null;
    isSuccess(): boolean;
    isTmpError(): boolean;
    isError(): boolean;
    columns(): string[];
    getPagination(): any;
    first(): number;
    count(): number;
    last(): number;
    limit(): number;
    total(): number;
    pages(): number;
    page(): number;
    prevpage(): number;
    nextpage(): number;
}
export declare const parse: (r: any) => any;
export declare const serialize: (pr: any) => string;
export declare const getTemplates: () => defresponses.IResponseTemplates;
export declare const getTemplate: (ptplid: string, pparse: boolean) => any;
export declare const isTemplateMatch: (pr: any, ptplid: string) => boolean;
